#!/bin/bash
# info: update web templates
# options: [RESTART]
#
# The function for obtaining updated pack of web templates.


#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument definition
restart=$1

# Includes
source $VESTA/func/main.sh
source $VESTA/conf/vesta.conf


#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

vst_backups="/root/vst_install_backups/$(date +%s)"
mkdir -p $vst_backups
cd $vst_backups
mkdir templates
cp -r $VESTA/data/templates/ $vst_backups/templates >/dev/null 2>&1

# Detcing OS
case $(head -n1 /etc/issue |cut -f 1 -d ' ') in
    Debian)     version="debian" ;;
    Ubuntu)     version="ubuntu" ;;
    *)          version="rhel" ;;
esac

# Detecting release
if [ "$version" = 'rhel' ]; then
    if [ -e '/etc/redhat-release' ]; then
        release=$(grep -o "[0-9]" /etc/redhat-release |head -n1)
    else
        release=6
    fi
fi
if [ "$version" = 'ubuntu' ]; then
    release=$(lsb_release -r |awk '{print $2}')
fi
if [ "$version" = 'debian' ]; then
    release=$(cat /etc/issue|grep -o [0-9]|head -n1)
fi

# Defining original path
vestacp="$VESTA/install/os-configs/$version/$release"

cp -rf $vestacp/templates/web $VESTA/data/templates/

# Rebuilding web domains
for user in $($BIN/v-list-sys-users plain); do
    $BIN/v-rebuild-web-domains $user no
done


#----------------------------------------------------------#
#                       Vesta                              #
#----------------------------------------------------------#

# Restarting web server
$BIN/v-restart-web $restart
check_result $? "restart" >/dev/null 2>&1

$BIN/v-restart-proxy $restart
check_result $? "restart" >/dev/null 2>&1

$BIN/v-restart-proxy $restart
check_result $? "restart" >/dev/null 2>&1

exit